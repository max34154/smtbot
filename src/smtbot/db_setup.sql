CREATE SCHEMA IF NOT EXISTS ASYNC AUTHORIZATION SA;
CREATE TABLE IF NOT EXISTS ASYNC.REQUEST (
	REQ_ID VARCHAR(100) NOT NULL,
	USER_NAME VARCHAR(100) NOT NULL,
	EXECUTION_RETRIES INTEGER,
	OPEN_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	"ACTION" VARCHAR(100) NOT NULL,
	PARAMETERS CLOB,
	STATUS CHAR(1) DEFAULT 'N' NOT NULL,
	SCHEDULE_NAME VARCHAR(100),
	RETRY_INTERVAL INTEGER,
	EXECUTION_MODE VARCHAR(60),
	LOCKED_BY VARCHAR(100),
	LOCK_TIME TIMESTAMP,
	ATTEMPT INTEGER DEFAULT 1,
	NEXT_RUN TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	EXPIRE_AT TIMESTAMP,
	SERVICE VARCHAR(100),
	SUBJECT VARCHAR(60),
	TAG VARCHAR(100),
	CONSTRAINT REQUEST_PK PRIMARY KEY (REQ_ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS REQUEST_PK ON ASYNC.REQUEST (REQ_ID);
CREATE INDEX IF NOT EXISTS REQUEST_STSCHED ON ASYNC.REQUEST(STATUS,SCHEDULE_NAME );
CREATE INDEX IF NOT EXISTS REQUEST_LOCKEDBY ON ASYNC.REQUEST(LOCKED_BY);
CREATE TABLE IF NOT EXISTS ASYNC.RESPONCE (
	RES_REQ_ID VARCHAR(100)  NOT NULL,
	"RESULT" CLOB,
	CLOSE_TIME TIMESTAMP,
	RES_STATUS INTEGER,
    FINISHED VARCHAR(2),
	CONSTRAINT RESPONCE_PK PRIMARY KEY (RES_REQ_ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS RESPONCE_PK ON ASYNC.RESPONCE (RES_REQ_ID);
CREATE TABLE IF NOT EXISTS ASYNC.ATTACHMENT (
	ATT_ID VARCHAR(100)  NOT NULL,
	ATT_REQ_ID VARCHAR(100)  NOT NULL,
	SIZE INTEGER,
	NAME VARCHAR(100)  NOT NULL,
	CONTENT_TYPE VARCHAR(100),
	BODY BLOB,
	CONSTRAINT ATTACHMENT_PK PRIMARY KEY (ATT_ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS ATTACHEMENT_PK ON ASYNC.ATTACHMENT (ATT_ID);
CREATE INDEX IF NOT EXISTS ATT_REQ_ID ON ASYNC.ATTACHMENT (ATT_REQ_ID);
ALTER TABLE ASYNC.RESPONCE ADD CONSTRAINT RESPONCE_FK FOREIGN KEY (RES_REQ_ID) REFERENCES ASYNC.REQUEST(REQ_ID) ON DELETE CASCADE;
ALTER TABLE ASYNC.ATTACHMENT ADD CONSTRAINT ATTACHMENT_FK FOREIGN KEY (ATT_REQ_ID) REFERENCES ASYNC.REQUEST(REQ_ID) ON DELETE CASCADE;

CREATE TABLE IF NOT EXISTS ASYNC.USER (
	NAME VARCHAR(60) NOT NULL,
	PASSWORD VARCHAR(250),
	TOC VARCHAR(250),
	EXPIRE_AT TIMESTAMP,
	CONSTRAINT USER_PK PRIMARY KEY (NAME)
);
CREATE UNIQUE INDEX IF NOT EXISTS USER_PR ON ASYNC.USER (NAME);

CREATE TABLE IF NOT EXISTS ASYNC.MESSAGE_LOG (
	MES_ID VARCHAR(100) NOT NULL,
	URL VARCHAR(512) NOT NULL,
	ATTEMPT INTEGER,
		STATUS INTEGER,
	BODY CLOB,
	DELIVERY_TIME TIMESTAMP,
	CONSTRAINT MESSAGE_LOG_PK PRIMARY KEY (MES_ID)
);
CREATE UNIQUE INDEX  IF NOT EXISTS MESSAGE_LOG_PK ON ASYNC.MESSAGE_LOG (MES_ID);

