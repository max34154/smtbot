-- Oracle creates schema when creates user. 
-- It's ex[ected that schema already exist
-- and db-user has all nessesary grants 

CREATE TABLE %SCHEMA%.REQUEST
(
    REQ_ID               VARCHAR2 (100 BYTE) NOT NULL,
    USER_NAME            VARCHAR2 (100 BYTE) NOT NULL,
    EXECUTION_RETRIES    INTEGER,
    OPEN_TIME            TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP,
    ACTION               VARCHAR2 (100 BYTE) NOT NULL,
    PARAMETERS           CLOB,
    STATUS               CHAR (1 BYTE) DEFAULT 'N' NOT NULL,
    SCHEDULE_NAME        VARCHAR2 (100 BYTE),
    RETRY_INTERVAL       INTEGER,
    EXECUTION_MODE       VARCHAR2 (60 BYTE),
    LOCKED_BY            VARCHAR2 (100 BYTE),
    LOCK_TIME            TIMESTAMP (6),
    ATTEMPT              INTEGER DEFAULT 1,
    NEXT_RUN             TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP,
    EXPIRE_AT            TIMESTAMP (6),
    SERVICE              VARCHAR2 (100 BYTE),
    SUBJECT              VARCHAR2 (60 BYTE),
    TAG                  VARCHAR2 (100 BYTE)
);

CREATE INDEX %SCHEMA%.REQUEST_LOCKED_INDX
    ON %SCHEMA%.REQUEST (LOCKED_BY, LOCK_TIME);

CREATE UNIQUE INDEX %SCHEMA%.REQUEST_PK
    ON %SCHEMA%.REQUEST (REQ_ID);

CREATE INDEX %SCHEMA%.SCH_AND_STATUS_INDX
    ON %SCHEMA%.REQUEST (SCHEDULE_NAME, STATUS);

ALTER TABLE %SCHEMA%.REQUEST
    ADD (
        CONSTRAINT REQUEST_PK PRIMARY KEY (REQ_ID)
            USING INDEX %SCHEMA%.REQUEST_PK ENABLE VALIDATE);
            

CREATE TABLE %SCHEMA%.RESPONCE
(
  RES_REQ_ID  VARCHAR2(100 BYTE)                NOT NULL,
  RESULT      CLOB,
  CLOSE_TIME  TIMESTAMP(6),
  RES_STATUS  INTEGER,
  FINISHED    VARCHAR2(2 BYTE)
);

CREATE UNIQUE INDEX %SCHEMA%.RESPONCE_PK ON %SCHEMA%.RESPONCE
(RES_REQ_ID);

ALTER TABLE %SCHEMA%.RESPONCE ADD (
  CONSTRAINT RESPONCE_PK
  PRIMARY KEY
  (RES_REQ_ID)
  USING INDEX %SCHEMA%.RESPONCE_PK
  ENABLE VALIDATE);

ALTER TABLE %SCHEMA%.RESPONCE ADD (
  CONSTRAINT RESPONCE_REQ 
  FOREIGN KEY (RES_REQ_ID) 
  REFERENCES %SCHEMA%.REQUEST (REQ_ID)
  ENABLE VALIDATE);


CREATE TABLE %SCHEMA%.ATTACHMENT
(
  ATT_ID        VARCHAR2(100 BYTE)              NOT NULL,
  ATT_REQ_ID    VARCHAR2(100 BYTE)              NOT NULL,
  "SIZE"        NUMBER,
  NAME          VARCHAR2(100 BYTE)              NOT NULL,
  CONTENT_TYPE  VARCHAR2(100 BYTE),
  BODY          BLOB,
  STATUS        NUMBER,
  CP_TIME       TIMESTAMP(6)
);


CREATE UNIQUE INDEX %SCHEMA%.ATTACHMENT_PK ON %SCHEMA%.ATTACHMENT
(ATT_ID);

CREATE INDEX %SCHEMA%.ATTACH_REQ_IDX ON %SCHEMA%.ATTACHMENT
(ATT_REQ_ID);

ALTER TABLE %SCHEMA%.ATTACHMENT ADD (
  CONSTRAINT ATTACHMENT_PK
  PRIMARY KEY
  (ATT_ID)
  USING INDEX %SCHEMA%.ATTACHMENT_PK
  ENABLE VALIDATE);

ALTER TABLE %SCHEMA%.ATTACHMENT ADD (
  CONSTRAINT ATTACHMENT_REQ 
  FOREIGN KEY (ATT_REQ_ID) 
  REFERENCES %SCHEMA%.REQUEST (REQ_ID)
  ENABLE VALIDATE);
  

CREATE TABLE %SCHEMA%.MESSAGE
(
  ID              VARCHAR2(100 BYTE)            NOT NULL,
  URL             VARCHAR2(512 BYTE)            NOT NULL,
  METHOD          VARCHAR2(10 BYTE)             NOT NULL,
  HEADERS         CLOB,
  BODY            CLOB,
  ATTEMPT         INTEGER,
  RETRY_INTERVAL  INTEGER,
  USER_NAME       VARCHAR2(100 BYTE)            NOT NULL,
  NEXT_RUN        TIMESTAMP(6)                  NOT NULL,
  LOCKED_BY       VARCHAR2(100 BYTE),
  LOCK_TIME       TIMESTAMP(6)
);


CREATE INDEX %SCHEMA%.MESSAGE_LOCKED_INDX ON %SCHEMA%.MESSAGE
(LOCKED_BY, LOCK_TIME);

CREATE UNIQUE INDEX %SCHEMA%.MESSAGE_PK ON %SCHEMA%.MESSAGE
(ID);

ALTER TABLE %SCHEMA%.MESSAGE ADD (
  CONSTRAINT MESSAGE_PK
  PRIMARY KEY
  (ID)
  USING INDEX %SCHEMA%.MESSAGE_PK
  ENABLE VALIDATE);

CREATE TABLE %SCHEMA%.MESSAGE_LOG
(
  MES_ID         VARCHAR2(100 BYTE)             NOT NULL,
  URL            VARCHAR2(512 BYTE)             NOT NULL,
  ATTEMPT        INTEGER,
  DELIVERY_TIME  TIMESTAMP(6),
  STATUS         INTEGER,
  BODY           CLOB
);

CREATE INDEX %SCHEMA%.MESLOG_MES_ID_INDX ON %SCHEMA%.ATTACHMENT
(MES_ID);

CREATE TABLE %SCHEMA%.HOOK
(
  USER_NAME       VARCHAR2(100 BYTE)            NOT NULL,
  NAME            VARCHAR2(100 BYTE)            NOT NULL,
  HEADERS         CLOB,
  METHOD          VARCHAR2(20 BYTE)             DEFAULT 'post',
  BODY            CLOB,
  MAX_RETRIES     INTEGER,
  RETRY_INTERVAL  INTEGER,
  URL             VARCHAR2(512 BYTE)            NOT NULL
);


CREATE INDEX %SCHEMA%.HOOK_NAME_INDX ON %SCHEMA%.HOOK
(NAME);

CREATE UNIQUE INDEX %SCHEMA%.HOOK_PK ON %SCHEMA%.HOOK
(NAME, USER_NAME);

ALTER TABLE %SCHEMA%.HOOK ADD (
  CONSTRAINT HOOK_PK
  PRIMARY KEY
  (NAME, USER_NAME)
  USING INDEX %SCHEMA%.HOOK_PK
  ENABLE VALIDATE);